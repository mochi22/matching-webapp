{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryu91\\\\create_matching_service\\\\frontend\\\\client\\\\src\\\\components\\\\Logout.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Logout = ({\n  setIsLoggedIn\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const handleLogout = async e => {\n    try {\n      //バックエンドのログアウト処理\n      const response = await axios.post('http://localhost:5000/logout');\n\n      // frontend のログアウト処理\n      // ログアウト状態に更新する関数を呼び出す\n      setIsLoggedIn(false);\n      // クッキーを削除\n      Cookies.remove('username');\n      console.log(\"logout success\");\n      setMessage(response.data);\n    } catch (error) {\n      setMessage('Error fetching user data');\n      console.error('Error fetching user data: ', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Logout, \"l8KXAebGu4sZHsyCIQX7P8si41w=\");\n_c = Logout;\nexport default Logout;\nvar _c;\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"names":["React","useState","useEffect","axios","Cookies","jsxDEV","_jsxDEV","Logout","setIsLoggedIn","_s","message","setMessage","handleLogout","e","response","post","remove","console","log","data","error","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ryu91/create_matching_service/frontend/client/src/components/Logout.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst Logout = ({ setIsLoggedIn }) => {\r\n    const [message, setMessage] = useState('');\r\n\r\n    const handleLogout = async (e) => {\r\n        try {\r\n            //バックエンドのログアウト処理\r\n            const response = await axios.post('http://localhost:5000/logout')\r\n            \r\n            // frontend のログアウト処理\r\n            // ログアウト状態に更新する関数を呼び出す\r\n            setIsLoggedIn(false);\r\n            // クッキーを削除\r\n            Cookies.remove('username');\r\n            \r\n            console.log(\"logout success\")\r\n            setMessage(response.data);\r\n        } catch (error) {\r\n        setMessage('Error fetching user data');\r\n        console.error('Error fetching user data: ', error);\r\n        \r\n    \r\n\r\n        }\r\n    };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={handleLogout}>Logout</button>\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logout;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMW,YAAY,GAAG,MAAOC,CAAC,IAAK;IAC9B,IAAI;MACA;MACA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,8BAA8B,CAAC;;MAEjE;MACA;MACAP,aAAa,CAAC,KAAK,CAAC;MACpB;MACAJ,OAAO,CAACY,MAAM,CAAC,UAAU,CAAC;MAE1BC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAC7BP,UAAU,CAACG,QAAQ,CAACK,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;MAChBT,UAAU,CAAC,0BAA0B,CAAC;MACtCM,OAAO,CAACG,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAIlD;EACJ,CAAC;EAGH,oBACEd,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAQgB,OAAO,EAAEV,YAAa;MAAAS,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9CpB,OAAA;MAAAe,QAAA,EAAIX;IAAO;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV,CAAC;AAACjB,EAAA,CAhCIF,MAAM;AAAAoB,EAAA,GAANpB,MAAM;AAkCZ,eAAeA,MAAM;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}