{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryu91\\\\create_matching_service\\\\frontend\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\n\nimport React, { useState, useEffect } from 'react';\nimport Home from './components/Home';\nimport PostUserInfo from './components/PostUserInfo';\nimport UserList from './components/UserList';\nimport SaearchUser from './components/SearchUser';\nimport FavoriteUserList from './components/FavoriteUserList';\nimport ConfirmRegister from './components/ConfirmRegister';\nimport DeleteUser from './components/DeleteUser';\nimport DeleteAllUser from './components/DeleteAllUser';\nimport RegisterUser from './components/RegisterUser';\nimport Login from './components/Login';\nimport Logout from './components/Logout';\nimport { BrowserRouter as Router, Route, Link, Routes } from 'react-router-dom';\nimport Cookies from 'js-cookie'; // js-cookieライブラリのインポート\n\nimport Layout from './layout/Layout'; // Layoutコンポーネントのインポート\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [username, setUsername] = useState('');\n  useEffect(() => {\n    // クッキーからログイン状態を取得\n    // const token = Cookies.get('token');\n    console.log(\"aaaaa\");\n    const user_uuid = Cookies.get('user_uuid');\n    const username = Cookies.get('username');\n    if (user_uuid && username) {\n      setIsLoggedIn(true);\n      setUsername(username);\n      console.log(\"tttrue\");\n    } else {\n      setIsLoggedIn(false);\n      setUsername('');\n      console.log(\"fffalse\");\n    }\n    console.log(\"ggg\", isLoggedIn, username);\n  }, []); // ページがマウントされたときのみ実行される\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      isLoggedIn: isLoggedIn,\n      username: username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mwesukrK4KvF50GiHW/VIZnShks=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Home","PostUserInfo","UserList","SaearchUser","FavoriteUserList","ConfirmRegister","DeleteUser","DeleteAllUser","RegisterUser","Login","Logout","BrowserRouter","Router","Route","Link","Routes","Cookies","Layout","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","username","setUsername","console","log","user_uuid","get","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ryu91/create_matching_service/frontend/client/src/App.js"],"sourcesContent":["// src/App.js\n\nimport React, { useState, useEffect } from 'react';\nimport Home from './components/Home';\nimport PostUserInfo from './components/PostUserInfo';\nimport UserList from './components/UserList';\nimport SaearchUser from './components/SearchUser';\nimport FavoriteUserList from './components/FavoriteUserList';\nimport ConfirmRegister from './components/ConfirmRegister';\nimport DeleteUser from './components/DeleteUser';\nimport DeleteAllUser from './components/DeleteAllUser';\nimport RegisterUser from './components/RegisterUser';\nimport Login from './components/Login';\nimport Logout from './components/Logout';\n\nimport { BrowserRouter as Router, Route, Link, Routes } from 'react-router-dom';\nimport Cookies from 'js-cookie'; // js-cookieライブラリのインポート\n\nimport Layout from './layout/Layout'; // Layoutコンポーネントのインポート\n\n\n\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [username, setUsername] = useState('');\n\n  useEffect(() => {\n    // クッキーからログイン状態を取得\n    // const token = Cookies.get('token');\n    console.log(\"aaaaa\");\n    const user_uuid = Cookies.get('user_uuid');\n    const username = Cookies.get('username');\n\n    if (user_uuid && username) {\n      setIsLoggedIn(true);\n      setUsername(username);\n      console.log(\"tttrue\");\n    } else {\n      setIsLoggedIn(false);\n      setUsername('');\n      console.log(\"fffalse\");\n    }\n    console.log(\"ggg\", isLoggedIn, username);\n  }, []); // ページがマウントされたときのみ実行される\n\n  return (\n    <Router>\n      {/* Layoutコンポーネントで全体のレイアウトを定義 */}\n      <Layout isLoggedIn={isLoggedIn} username={username}>\n\n      </Layout>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,WAAW,MAAM,yBAAyB;AACjD,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AAExC,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAEC,MAAM,QAAQ,kBAAkB;AAC/E,OAAOC,OAAO,MAAM,WAAW,CAAC,CAAC;;AAEjC,OAAOC,MAAM,MAAM,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAKtC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAAC0B,QAAQ,EAAEC,WAAW,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA;IACA2B,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpB,MAAMC,SAAS,GAAGZ,OAAO,CAACa,GAAG,CAAC,WAAW,CAAC;IAC1C,MAAML,QAAQ,GAAGR,OAAO,CAACa,GAAG,CAAC,UAAU,CAAC;IAExC,IAAID,SAAS,IAAIJ,QAAQ,EAAE;MACzBD,aAAa,CAAC,IAAI,CAAC;MACnBE,WAAW,CAACD,QAAQ,CAAC;MACrBE,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACvB,CAAC,MAAM;MACLJ,aAAa,CAAC,KAAK,CAAC;MACpBE,WAAW,CAAC,EAAE,CAAC;MACfC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACxB;IACAD,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEL,UAAU,EAAEE,QAAQ,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA,CAACP,MAAM;IAAAkB,QAAA,eAELX,OAAA,CAACF,MAAM;MAACK,UAAU,EAAEA,UAAW;MAACE,QAAQ,EAAEA;IAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE3C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb;AAACb,EAAA,CA/BQD,GAAG;AAAAe,EAAA,GAAHf,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}